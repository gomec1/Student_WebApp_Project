stages:
  - build
  - test
  - deploy

text-converter:
  stage: build
  # The Docker image that will be used to build your app
  image: node:lts
  before_script:
    - npm i markdown-to-html-cli -g
  script:
    - mkdir -p public
    - mkdir -p public/docs
    - mkdir -p public/Deliverables/Deliverable_4
    # - cp docs/*.png public/docs
    # Beim ersten Durchlauf existiert der Ordner noch nicht; falls bereits vorhanden unterdr√ºckt "-p" Fehler
    # Ohne Parameter --source wird die Datei README.md verwendet
    - markdown-to-html --output public/index.html
    - markdown-to-html --source docs/Deliverables/Deliverable_4/Deliverable_4_Blogpost.md --output public/Deliverables/Deliverable_4/Deliverable_4_Blogpost.html
  artifacts:
    paths:
      - public

# https://gitlab.com/pipeline-components/markdown-spellcheck
md-spellcheck:
  stage: test
  # The Docker image that will be used to build your app
  image: registry.gitlab.com/pipeline-components/markdown-spellcheck:latest
  script:
    - mdspell --report 'docs/**/*-en.md'
    - mdspell --dictionary 'docs/hunspell/de-ch' --report 'docs/**/*-de.md'
  allow_failure: true

pages:
  stage: deploy
  # Functions that should be executed before the build script is run
  script:
    - echo "publishing artifacts"
  artifacts:
    paths:
      # The folder that contains the files to be exposed at the Page URL
      - public
  rules:
    # This ensures that only pushes to the default branch will trigger
    # a pages deploy
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
